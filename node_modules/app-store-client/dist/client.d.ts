import * as methods from "./methods";
import { App, PrivacyDetails, RatingsResult, Review, Suggestion } from "./types";
import { Country } from "./constants";
export interface AppStoreClientOptions {
    country?: Country;
    language?: string;
    requestOptions?: any;
    throttle?: number;
    cacheMaxAge?: number;
    cacheMaxSize?: number;
}
export declare class AppStoreClient {
    private options;
    constructor(options?: AppStoreClientOptions);
    private memoizeMethod;
    app: (options: methods.AppOptions) => Promise<App>;
    list: (options: methods.ListOptions) => Promise<App[]>;
    search: (options: methods.SearchOptions) => Promise<App[] | string[]>;
    appsByDeveloper: (options: methods.DeveloperOptions) => Promise<App[]>;
    privacy: (options: methods.PrivacyOptions) => Promise<PrivacyDetails>;
    suggestedTerms: (options: methods.SuggestOptions) => Promise<Suggestion[]>;
    similarApps: (options: methods.SimilarOptions) => Promise<App[]>;
    reviews: (options: methods.ReviewOptions) => Promise<Review[]>;
    ratings: (options: methods.RatingsOptions) => Promise<RatingsResult>;
}
